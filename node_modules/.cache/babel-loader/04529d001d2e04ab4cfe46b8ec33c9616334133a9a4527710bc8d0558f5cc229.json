{"ast":null,"code":"import { doc, getDoc } from 'firebase/firestore';\nimport db from '../utilities/firebase.js';\nimport { storage } from \"../utilities/firebase.js\";\nimport { ref, uploadBytes } from \"firebase/storage\";\nimport imageholder from './imagePreview.vue';\nexport default {\n  name: 'App',\n  components: {\n    imageholder\n  },\n  data() {\n    return {\n      jumlahAlumni: '',\n      y: 'alumni/' + this.jumlahAlumni.toString()\n    };\n  },\n  created() {\n    this.getAlumni();\n  },\n  methods: {\n    async getAlumni() {\n      const docSnap = await getDoc(doc(db, 'alumni', 'jumlah'));\n      if (docSnap.exists()) {\n        this.jumlahAlumni = docSnap.data().jumlah;\n      }\n    },\n    upload: function () {\n      let x = this.jumlahAlumni.toString();\n      this.y = x;\n      const storageRef = ref(storage, 'alumni/' + x);\n      uploadBytes(storageRef, this.$refs.myfile.files[0]).then(() => {\n        console.log(\"uploaded\");\n      });\n    }\n  }\n};","map":{"version":3,"names":["doc","getDoc","db","storage","ref","uploadBytes","imageholder","name","components","data","jumlahAlumni","y","toString","created","getAlumni","methods","docSnap","exists","jumlah","upload","x","storageRef","$refs","myfile","files","then","console","log"],"sources":["D:\\rafi\\koding\\vue3\\WEBIOT\\iotub\\src\\views\\AboutView.vue"],"sourcesContent":["<template>\n  <div class=\"pt-20\">\n    <imageholder path={{this.y}} />\n    <h1>This is an about page</h1>\n    <input type=\"file\" ref=\"myfile\">\n    <button @click=\"upload\">upload</button>\n  </div>\n</template>\n\n<script>\nimport { doc, getDoc } from 'firebase/firestore'\nimport db from '../utilities/firebase.js'\nimport {storage} from \"../utilities/firebase.js\"\nimport { ref, uploadBytes} from \"firebase/storage\"\nimport imageholder from './imagePreview.vue'\nexport default{\n  name:'App',\n  components:{\n    imageholder,\n  },\n  data(){\n    return{\n      jumlahAlumni: '',\n      y:'alumni/' + this.jumlahAlumni.toString(),\n    };\n  },\n  created() {\n    this.getAlumni()\n  },\n  \n  methods:{\n    async getAlumni() {\n        const docSnap = await getDoc(doc(db, 'alumni', 'jumlah'))\n        if (docSnap.exists()) {\n            this.jumlahAlumni = docSnap.data().jumlah;\n      }\n    },\n    upload: function(){\n      let x = this.jumlahAlumni.toString();\n      this.y = x\n      const storageRef = ref(storage, 'alumni/'+x);\n      uploadBytes(storageRef, this.$refs.myfile.files[0]).then(()=>{console.log(\"uploaded\")})\n    },\n  }\n}\n</script>"],"mappings":"AAUA,SAASA,GAAG,EAAEC,MAAK,QAAS,oBAAmB;AAC/C,OAAOC,EAAC,MAAO,0BAAyB;AACxC,SAAQC,OAAO,QAAO,0BAAyB;AAC/C,SAASC,GAAG,EAAEC,WAAW,QAAO,kBAAiB;AACjD,OAAOC,WAAU,MAAO,oBAAmB;AAC3C,eAAc;EACZC,IAAI,EAAC,KAAK;EACVC,UAAU,EAAC;IACTF;EACF,CAAC;EACDG,IAAIA,CAAA,EAAE;IACJ,OAAM;MACJC,YAAY,EAAE,EAAE;MAChBC,CAAC,EAAC,SAAQ,GAAI,IAAI,CAACD,YAAY,CAACE,QAAQ,CAAC;IAC3C,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,CAAC;EACjB,CAAC;EAEDC,OAAO,EAAC;IACN,MAAMD,SAASA,CAAA,EAAG;MACd,MAAME,OAAM,GAAI,MAAMf,MAAM,CAACD,GAAG,CAACE,EAAE,EAAE,QAAQ,EAAE,QAAQ,CAAC;MACxD,IAAIc,OAAO,CAACC,MAAM,CAAC,CAAC,EAAE;QAClB,IAAI,CAACP,YAAW,GAAIM,OAAO,CAACP,IAAI,CAAC,CAAC,CAACS,MAAM;MAC/C;IACF,CAAC;IACDC,MAAM,EAAE,SAAAA,CAAA,EAAU;MAChB,IAAIC,CAAA,GAAI,IAAI,CAACV,YAAY,CAACE,QAAQ,CAAC,CAAC;MACpC,IAAI,CAACD,CAAA,GAAIS,CAAA;MACT,MAAMC,UAAS,GAAIjB,GAAG,CAACD,OAAO,EAAE,SAAS,GAACiB,CAAC,CAAC;MAC5Cf,WAAW,CAACgB,UAAU,EAAE,IAAI,CAACC,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,MAAI;QAACC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MAAA,CAAC;IACxF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}