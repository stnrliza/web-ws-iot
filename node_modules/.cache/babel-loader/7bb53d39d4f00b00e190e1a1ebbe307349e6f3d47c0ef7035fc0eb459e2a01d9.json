{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"pt-20\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"This is an about page\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  type: \"file\",\n  ref: \"myfile\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_imageholder = _resolveComponent(\"imageholder\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_imageholder, {\n    path: \"{{this.y}}\"\n  }), _hoisted_2, _createElementVNode(\"input\", _hoisted_3, null, 512 /* NEED_PATCH */), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.upload && $options.upload(...args))\n  }, \"upload\")]);\n}","map":{"version":3,"names":["class","_createElementVNode","type","ref","_createElementBlock","_hoisted_1","_createVNode","_component_imageholder","path","_hoisted_2","_hoisted_3","onClick","_cache","args","$options","upload"],"sources":["D:\\rafi\\koding\\vue3\\WEBIOT\\iotub\\src\\views\\AboutView.vue"],"sourcesContent":["<template>\n  <div class=\"pt-20\">\n    <imageholder path={{this.y}} />\n    <h1>This is an about page</h1>\n    <input type=\"file\" ref=\"myfile\">\n    <button @click=\"upload\">upload</button>\n  </div>\n</template>\n\n<script>\nimport { doc, getDoc } from 'firebase/firestore'\nimport db from '../utilities/firebase.js'\nimport {storage} from \"../utilities/firebase.js\"\nimport { ref, uploadBytes} from \"firebase/storage\"\nimport imageholder from './imagePreview.vue'\nexport default{\n  name:'App',\n  components:{\n    imageholder,\n  },\n  data(){\n    return{\n      jumlahAlumni: '',\n      y: '',\n    };\n  },\n  created() {\n    this.getAlumni()\n  },\n  \n  methods:{\n    async getAlumni() {\n        const docSnap = await getDoc(doc(db, 'alumni', 'jumlah'))\n        if (docSnap.exists()) {\n            this.jumlahAlumni = docSnap.data().jumlah;\n      }\n    },\n    upload: function(){\n      let x = this.jumlahAlumni.toString();\n      this.y = 'alumni/' + x\n      const storageRef = ref(storage, 'alumni/'+x);\n      uploadBytes(storageRef, this.$refs.myfile.files[0]).then(()=>{console.log(\"uploaded\")})\n    },\n  }\n}\n</script>"],"mappings":";;EACOA,KAAK,EAAC;AAAO;gCAEhBC,mBAAA,CAA8B,YAA1B,uBAAqB;;EAClBC,IAAI,EAAC,MAAM;EAACC,GAAG,EAAC;;;;uBAHzBC,mBAAA,CAKM,OALNC,UAKM,GAJJC,YAAA,CAA+BC,sBAAA;IAAlBC,IAAI,EAAC;EAAU,IAC5BC,UAA8B,EAC9BR,mBAAA,CAAgC,SAAhCS,UAAgC,+BAChCT,mBAAA,CAAuC;IAA9BU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;KAAE,QAAM,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}