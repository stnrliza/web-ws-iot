{"ast":null,"code":"import VueCropper from \"vue-cropperjs\";\nimport \"cropperjs/dist/cropper.css\";\nexport default {\n  components: {\n    VueCropper\n  },\n  props: {\n    // eslint-disable-next-line vue/require-prop-types\n    image: {\n      required: true\n    }\n  },\n  data() {\n    return {\n      imgSrc: \"/assets/images/berserk.jpg\",\n      cropImg: \"\",\n      data: null,\n      filename: \"\",\n      mimeType: \"\",\n      isAvatarUploadDialogOpen: false\n    };\n  },\n  watch: {\n    image(value) {\n      this.initialImageSetUp(value);\n    }\n  },\n  mounted() {\n    this.initialImageSetUp(this.image);\n  },\n  methods: {\n    initialImageSetUp(value) {\n      const self = this;\n      if (!value) {\n        this.cropImg = \"\";\n        this.$emit('close', true);\n        return;\n      }\n      this.isAvatarUploadDialogOpen = true;\n      self.filename = value.name;\n      self.mimeType = value.type;\n      self.setImage(value);\n    },\n    async dataURLToFile(imageString, filename, mimeType) {\n      const res = await fetch(imageString);\n      const blob = await res.blob();\n      return new File([blob], filename, {\n        type: mimeType\n      });\n    },\n    async submitImage() {\n      await this.cropImage();\n      const imageFileResponse = await this.dataURLToFile(this.cropImg, this.filename, this.mimeType);\n      this.$emit('done', imageFileResponse);\n      this.isAvatarUploadDialogOpen = false;\n    },\n    cropImage() {\n      // get image data for post processing, e.g. upload or setting image src\n      this.cropImg = this.$refs.cropper.getCroppedCanvas().toDataURL();\n    },\n    // flipX() {\n    //   const dom = this.$refs.flipX;\n    //   let scale = dom.getAttribute(\"data-scale\");\n    //   scale = scale ? -scale : -1;\n    //   this.$refs.cropper.scaleX(scale);\n    //   dom.setAttribute(\"data-scale\", scale);\n    // },\n    // flipY() {\n    //   const dom = this.$refs.flipY;\n    //   let scale = dom.getAttribute(\"data-scale\");\n    //   scale = scale ? -scale : -1;\n    //   this.$refs.cropper.scaleY(scale);\n    //   dom.setAttribute(\"data-scale\", scale);\n    // },\n    getCropBoxData() {\n      this.data = JSON.stringify(this.$refs.cropper.getCropBoxData(), null, 4);\n    },\n    getData() {\n      this.data = JSON.stringify(this.$refs.cropper.getData(), null, 4);\n    },\n    move(offsetX, offsetY) {\n      this.$refs.cropper.move(offsetX, offsetY);\n    },\n    reset() {\n      this.$refs.cropper.reset();\n    },\n    rotate(deg) {\n      this.$refs.cropper.rotate(deg);\n    },\n    setCropBoxData() {\n      if (!this.data) return;\n      this.$refs.cropper.setCropBoxData(JSON.parse(this.data));\n    },\n    setData() {\n      if (!this.data) return;\n      this.$refs.cropper.setData(JSON.parse(this.data));\n    },\n    setImage(file) {\n      if (!file.type.includes(\"image/\")) {\n        alert(\"Please select an image file\");\n        return;\n      }\n      if (typeof FileReader === \"function\") {\n        const reader = new FileReader();\n        reader.onload = event => {\n          this.imgSrc = event.target.result;\n          // rebuild cropperjs with the updated source\n          this.$refs.cropper.replace(event.target.result);\n        };\n        reader.readAsDataURL(file);\n      } else {\n        alert(\"Sorry, FileReader API not supported\");\n      }\n    },\n    showFileChooser() {\n      this.$refs.input.click();\n    },\n    zoom(percent) {\n      this.$refs.cropper.relativeZoom(percent);\n    }\n  }\n};","map":{"version":3,"names":["VueCropper","components","props","image","required","data","imgSrc","cropImg","filename","mimeType","isAvatarUploadDialogOpen","watch","value","initialImageSetUp","mounted","methods","self","$emit","name","type","setImage","dataURLToFile","imageString","res","fetch","blob","File","submitImage","cropImage","imageFileResponse","$refs","cropper","getCroppedCanvas","toDataURL","getCropBoxData","JSON","stringify","getData","move","offsetX","offsetY","reset","rotate","deg","setCropBoxData","parse","setData","file","includes","alert","FileReader","reader","onload","event","target","result","replace","readAsDataURL","showFileChooser","input","click","zoom","percent","relativeZoom"],"sources":["D:\\rafi\\koding\\vue3\\WEBIOT\\iotub\\src\\components\\utl\\AvatarUpload.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div class=\"content\">\r\n        <v-dialog v-model=\"isAvatarUploadDialogOpen\" persistent max-width=\"600\">\r\n          <v-card>\r\n            <v-card-title class=\"headline\"></v-card-title>\r\n  \r\n            <v-card-text>\r\n              <v-row no-gutters>\r\n                <v-col class=\"\">\r\n                  <section class=\"cropper-area\">\r\n                    <div class=\"img-cropper\">\r\n                      <vue-cropper\r\n                        ref=\"cropper\"\r\n                        :initial-aspect-ratio=\"1\"\r\n                        :src=\"imgSrc\"\r\n                        preview=\".preview\"\r\n                      />\r\n                    </div>\r\n                    <div class=\"actions mt-2\">\r\n                      <v-btn class=\"ma-1\" small dark color=\"grey darken-3\" @click.prevent=\"zoom(0.2)\">\r\n                        <v-icon> mdi-magnify-plus-outline</v-icon>\r\n                      </v-btn>\r\n                      <v-btn class=\"ma-1\" small dark color=\"grey darken-3\" @click.prevent=\"zoom(-0.2)\">\r\n                        <v-icon> mdi-magnify-minus-outline</v-icon>\r\n                      </v-btn>\r\n                      <v-btn class=\"ma-1\" small dark color=\"grey darken-3\" @click.prevent=\"rotate(90)\">\r\n                        <v-icon href=\"#\">\r\n                          mdi-axis-x-rotate-clockwise\r\n                        </v-icon>\r\n                      </v-btn>\r\n                      <v-btn class=\"ma-1\" small dark color=\"grey darken-3\" @click.prevent=\"rotate(-90)\">\r\n                        <v-icon>\r\n                          mdi-axis-x-rotate-counterclockwise\r\n                        </v-icon>\r\n                      </v-btn>\r\n                      <v-btn class=\"ma-1\" small dark color=\"grey darken-3\" @click.prevent=\"move(10, 0)\">\r\n                        <v-icon>\r\n                          mdi-arrow-left\r\n                        </v-icon>\r\n                      </v-btn>\r\n                      <v-btn class=\"ma-1\" small dark color=\"grey darken-3\" @click.prevent=\"move(-10, 0)\">\r\n                        <v-icon>\r\n                          mdi-arrow-right\r\n                        </v-icon>\r\n                      </v-btn>\r\n                      <v-btn class=\"ma-1\" small dark color=\"grey darken-3\" @click.prevent=\"move(0, 10)\">\r\n                        <v-icon>\r\n                          mdi-arrow-up\r\n                        </v-icon>\r\n                      </v-btn>\r\n                      <v-btn class=\"ma-1\" small dark color=\"grey darken-3\" @click.prevent=\"move(0, -10)\">\r\n                        <v-icon>\r\n                          mdi-arrow-down\r\n                        </v-icon>\r\n                      </v-btn>\r\n  \r\n  \r\n                      <!--              <v-btn class=\"ma-1\" small dark color=\"grey darken-3\"  @click.prevent=\"cropImage\">-->\r\n                      <!--                <v-icon > mdi-crop</v-icon>-->\r\n                      <!--              </v-btn>-->\r\n                      <v-btn class=\"ma-1\" small dark color=\"grey darken-3\">\r\n                        <v-icon @click.prevent=\"reset\"> mdi-lock-reset</v-icon>\r\n                      </v-btn>\r\n                    </div>\r\n                  </section>\r\n                  <div class=\"text-right\">\r\n                    <v-btn small dark color=\"grey darken-3 mt-3\" @click.prevent=\"submitImage\">\r\n                      <v-icon> mdi-send</v-icon>\r\n                      Submit\r\n                    </v-btn>\r\n                  </div>\r\n  \r\n  \r\n                  <!--            <div class=\"mt-4\">-->\r\n                  <!--              <v-btn small dark color=\"grey darken-3\" @click.prevent=\"showFileChooser\">-->\r\n                  <!--                <v-icon>-->\r\n                  <!--                  mdi-upload-->\r\n                  <!--                </v-icon>-->\r\n                  <!--                Upload Image-->\r\n                  <!--              </v-btn>-->\r\n                  <!--            </div>-->\r\n  \r\n                  <!-- <textarea v-model=\"data\" /> -->\r\n  \r\n                </v-col>\r\n  \r\n                <!--        <v-col cols=\"12\" sm=\"6\">-->\r\n                <!--          <section class=\"preview-area\">-->\r\n                <!--            &lt;!&ndash;            <p>Preview</p>&ndash;&gt;-->\r\n                <!--            <div class=\"preview\"/>-->\r\n                <!--            <div class=\"cropped-image\">-->\r\n                <!--              <img v-if=\"cropImg\" :src=\"cropImg\" alt=\"Cropped Image\"/>-->\r\n                <!--              <div v-else class=\"crop-placeholder\"/>-->\r\n                <!--            </div>-->\r\n                <!--          </section>-->\r\n                <!--        </v-col>-->\r\n              </v-row>\r\n  \r\n            </v-card-text>\r\n          </v-card>\r\n        </v-dialog>\r\n  \r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import VueCropper from \"vue-cropperjs\";\r\n  import \"cropperjs/dist/cropper.css\";\r\n  \r\n  export default {\r\n    components: {\r\n      VueCropper,\r\n    },\r\n    props: {\r\n      // eslint-disable-next-line vue/require-prop-types\r\n      image: {\r\n        required: true\r\n      },\r\n  \r\n    },\r\n    data() {\r\n      return {\r\n        imgSrc: \"/assets/images/berserk.jpg\",\r\n        cropImg: \"\",\r\n        data: null,\r\n        filename: \"\",\r\n        mimeType: \"\",\r\n        isAvatarUploadDialogOpen: false,\r\n      };\r\n    },\r\n    watch: {\r\n      image(value) {\r\n        this.initialImageSetUp(value)\r\n      }\r\n    },\r\n    mounted() {\r\n      this.initialImageSetUp(this.image)\r\n    },\r\n    methods: {\r\n      initialImageSetUp(value) {\r\n        const self = this\r\n  \r\n        if (!value) {\r\n          this.cropImg = \"\"\r\n          this.$emit('close', true)\r\n          return;\r\n        }\r\n        this.isAvatarUploadDialogOpen = true\r\n        self.filename = value.name\r\n        self.mimeType = value.type\r\n        self.setImage(value)\r\n      },\r\n  async dataURLToFile(imageString, filename, mimeType) {\r\n  \r\n      const res = await fetch(imageString);\r\n      const blob = await res.blob();\r\n      return new File([blob], filename, { type: mimeType });\r\n    },\r\n      async submitImage() {\r\n        await this.cropImage();\r\n        const imageFileResponse = await this.dataURLToFile(this.cropImg, this.filename, this.mimeType)\r\n        this.$emit('done', imageFileResponse)\r\n        this.isAvatarUploadDialogOpen = false\r\n  \r\n      },\r\n      cropImage() {\r\n        // get image data for post processing, e.g. upload or setting image src\r\n        this.cropImg = this.$refs.cropper.getCroppedCanvas().toDataURL();\r\n      },\r\n      // flipX() {\r\n      //   const dom = this.$refs.flipX;\r\n      //   let scale = dom.getAttribute(\"data-scale\");\r\n      //   scale = scale ? -scale : -1;\r\n      //   this.$refs.cropper.scaleX(scale);\r\n      //   dom.setAttribute(\"data-scale\", scale);\r\n      // },\r\n      // flipY() {\r\n      //   const dom = this.$refs.flipY;\r\n      //   let scale = dom.getAttribute(\"data-scale\");\r\n      //   scale = scale ? -scale : -1;\r\n      //   this.$refs.cropper.scaleY(scale);\r\n      //   dom.setAttribute(\"data-scale\", scale);\r\n      // },\r\n      getCropBoxData() {\r\n        this.data = JSON.stringify(this.$refs.cropper.getCropBoxData(), null, 4);\r\n      },\r\n      getData() {\r\n        this.data = JSON.stringify(this.$refs.cropper.getData(), null, 4);\r\n      },\r\n      move(offsetX, offsetY) {\r\n        this.$refs.cropper.move(offsetX, offsetY);\r\n      },\r\n      reset() {\r\n        this.$refs.cropper.reset();\r\n      },\r\n      rotate(deg) {\r\n        this.$refs.cropper.rotate(deg);\r\n      },\r\n      setCropBoxData() {\r\n        if (!this.data) return;\r\n  \r\n        this.$refs.cropper.setCropBoxData(JSON.parse(this.data));\r\n      },\r\n      setData() {\r\n        if (!this.data) return;\r\n  \r\n        this.$refs.cropper.setData(JSON.parse(this.data));\r\n      },\r\n      setImage(file) {\r\n  \r\n        if (!file.type.includes(\"image/\")) {\r\n          alert(\"Please select an image file\");\r\n          return;\r\n        }\r\n  \r\n        if (typeof FileReader === \"function\") {\r\n          const reader = new FileReader();\r\n  \r\n          reader.onload = (event) => {\r\n            this.imgSrc = event.target.result;\r\n            // rebuild cropperjs with the updated source\r\n            this.$refs.cropper.replace(event.target.result);\r\n          };\r\n  \r\n          reader.readAsDataURL(file);\r\n        } else {\r\n          alert(\"Sorry, FileReader API not supported\");\r\n        }\r\n      },\r\n      showFileChooser() {\r\n        this.$refs.input.click();\r\n      },\r\n      zoom(percent) {\r\n        this.$refs.cropper.relativeZoom(percent);\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  input[type=\"file\"] {\r\n    display: none;\r\n  }\r\n  \r\n  .cropped-image {\r\n    padding: 0 .8rem;\r\n  }\r\n  \r\n  .img-cropper {\r\n    max-height: 400px;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  </style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}