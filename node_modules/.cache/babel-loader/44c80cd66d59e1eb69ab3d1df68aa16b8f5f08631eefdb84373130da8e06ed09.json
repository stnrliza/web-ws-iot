{"ast":null,"code":"import { doc, getDoc } from 'firebase/firestore';\nimport db from '../utilities/firebase.js';\nimport { storage } from \"../utilities/firebase.js\";\nimport { ref, uploadBytes } from \"firebase/storage\";\nexport default {\n  name: 'App',\n  components: {},\n  data() {\n    return {\n      jumlahAlumni: ''\n    };\n  },\n  created() {\n    this.getAlumni();\n  },\n  methods: {\n    async getAlumni() {\n      const docSnap = await getDoc(doc(db, 'alumni', 'jumlah'));\n      if (docSnap.exists()) {\n        this.jumlahAlumni = docSnap.data().jumlah;\n      }\n    },\n    upload: function () {\n      let x = this.jumlahAlumni.toString();\n      const storageRef = ref(storage, 'alumni/' + x);\n      uploadBytes(storageRef, this.$refs.myfile.files[0]).then(() => {\n        console.log(\"uploaded\");\n      });\n    }\n  }\n};","map":{"version":3,"names":["doc","getDoc","db","storage","ref","uploadBytes","name","components","data","jumlahAlumni","created","getAlumni","methods","docSnap","exists","jumlah","upload","x","toString","storageRef","$refs","myfile","files","then","console","log"],"sources":["D:\\rafi\\koding\\vue3\\WEBIOT\\iotub\\src\\views\\AboutView.vue"],"sourcesContent":["<template>\n  <div class=\"pt-20\">\n    <h1>This is an aboutzz page</h1>\n    <div class=\" pt-10 pb-5\">\n      <section class=\" text-3xl\">ALUMNI</section>\n    </div>\n    <div>\n      <section class=\" text-lg font-bold py-3\">Tambahkan Alumni Baru</section>\n      <section>\n        <input type=\"file\" ref=\"myfile\">\n        <button @click=\"upload\">upload</button>\n      </section>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport { doc, getDoc } from 'firebase/firestore'\nimport db from '../utilities/firebase.js'\nimport {storage} from \"../utilities/firebase.js\"\nimport { ref, uploadBytes} from \"firebase/storage\"\n\nexport default{\n  name:'App',\n  components:{\n\n  },\n  data(){\n    return{\n      jumlahAlumni: '',\n    };\n  },\n  created() {\n    this.getAlumni()\n  },\n  \n  methods:{\n    async getAlumni() {\n        const docSnap = await getDoc(doc(db, 'alumni', 'jumlah'))\n        if (docSnap.exists()) {\n            this.jumlahAlumni = docSnap.data().jumlah;\n      }\n    },\n    upload: function(){\n      let x = this.jumlahAlumni.toString();\n      const storageRef = ref(storage, 'alumni/'+x);\n      uploadBytes(storageRef, this.$refs.myfile.files[0]).then(()=>{console.log(\"uploaded\")})\n    },\n  }\n}\n</script>"],"mappings":"AAkBA,SAASA,GAAG,EAAEC,MAAK,QAAS,oBAAmB;AAC/C,OAAOC,EAAC,MAAO,0BAAyB;AACxC,SAAQC,OAAO,QAAO,0BAAyB;AAC/C,SAASC,GAAG,EAAEC,WAAW,QAAO,kBAAiB;AAEjD,eAAc;EACZC,IAAI,EAAC,KAAK;EACVC,UAAU,EAAC,CAEX,CAAC;EACDC,IAAIA,CAAA,EAAE;IACJ,OAAM;MACJC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,SAAS,CAAC;EACjB,CAAC;EAEDC,OAAO,EAAC;IACN,MAAMD,SAASA,CAAA,EAAG;MACd,MAAME,OAAM,GAAI,MAAMZ,MAAM,CAACD,GAAG,CAACE,EAAE,EAAE,QAAQ,EAAE,QAAQ,CAAC;MACxD,IAAIW,OAAO,CAACC,MAAM,CAAC,CAAC,EAAE;QAClB,IAAI,CAACL,YAAW,GAAII,OAAO,CAACL,IAAI,CAAC,CAAC,CAACO,MAAM;MAC/C;IACF,CAAC;IACDC,MAAM,EAAE,SAAAA,CAAA,EAAU;MAChB,IAAIC,CAAA,GAAI,IAAI,CAACR,YAAY,CAACS,QAAQ,CAAC,CAAC;MACpC,MAAMC,UAAS,GAAIf,GAAG,CAACD,OAAO,EAAE,SAAS,GAACc,CAAC,CAAC;MAC5CZ,WAAW,CAACc,UAAU,EAAE,IAAI,CAACC,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,MAAI;QAACC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MAAA,CAAC;IACxF;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}